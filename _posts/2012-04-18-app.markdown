---
layout: default
title: Rails Girls App Tutorial
permalink: app
---

# מדריך Rails Girls לבניית אפליקציה

*נוצר על-ידי Vesa Vänskä, [@vesan](https://twitter.com/vesan)*

**ודאי ש-Rails מותקן אצלך.** [**קראי את מדריך ההתקנה**](/install) כדי להכין את המחשב שלך.


## הכירי את כלי העבודה

<div class="indent" markdown="1">

<h3><i class="icon-text-editor">&nbsp;</i></h3>
### עורך טקסט

[Sublime Text](http://www.sublimetext.com), [Komodo Edit](http://www.activestate.com/komodo-edit), Vim, Emacs, ו-Gedit הם דוגמאות לעורי טקסט שאת יכולה להשתמש בהם לכתיבת קוד ועריכת קבצים.

<h3><i class="icon-prompt">&nbsp;</i></h3>
### Terminal (נקרא גם Prompt ב-Windows)
כן את מפעילה את שרת ה-Rails ומריצה פקודות.

<h3><i class="icon-browser">&nbsp;</i></h3>
### דפדפן
(Firefox, Safari, Chrome) לצפייה באפליקציה שלך.

</div>


## *1.*יצירת האפליקציה

אנחנו הולכים ליצור אפליקציית Rails חדשה בשם *railsgirls*.

ראשית, נפתח את הטרמינל:

* Mac OS X: פתחי את Spotlight, כיתבי *Terminal* ולחצי על אפליקצית ה-*Terminal*.
* Windows: לחצי Start וחפשי את *Command Prompt*, אחר כך, אחר כך לחצי על *Command Prompt with Ruby on Rails*.
* Linux (Ubuntu): חפי את *Terminal* on the dash and click *Terminal*.

לאחר מכן הקלידי את הפקודות הבאות בטרמינל:

<div class="os-specific">
  <div class="nix">
{% highlight sh %}
mkdir projects
cd projects
rails new railsgirls
cd railsgirls
rails server
{% endhighlight %}
  </div>

  <div class="win">
{% highlight sh %}
mkdir projects
cd projects
rails new railsgirls
cd railsgirls
ruby script\rails server
{% endhighlight %}
  </div>
</div>

פתחי את הדפדפן שלך וגילשי לכתובת [http://localhost:3000](http://localhost:3000). את אמורה לראות עמוד "Welcome aboard", שאומר שיצירת האפליקציה פעלה כראוי.

לחצי `CTRL-C` בטרמינל כדי לכבות את השרת.

**דריכה:** הסבירי מה כל פקודה עושה. מה ג'ונרט? מה עושה השרת?


## *2.*יצירת שלד רעיון

אנחנו הולכים להשתמש בפונקציונליות ה-scaffold (שלד) של Rails כדי ליצור אפליקציה התחלתית שמאפשרת לשנו להציג רשימה, להוסיף, למחוק, לערוך ולצפות בדברים; במקרה שלנו: רעיונות.

**מדריך/ה:** מה זה scaffolding ב-Rails? (הסבר/הסבירי את הפקודה, את שם ה-model ואת הטבלה המשוייכת לו, naming conventions, מאפיינים וטיפוסים, וכו'.) מהן מיגרציות ובשביל מה צריך אותן?

<div class="os-specific">
  <div class="nix">
{% highlight sh %}
rails generate scaffold idea name:string description:text picture:string
rake db:migrate
rails server
{% endhighlight %}
  </div>

  <div class="win">
{% highlight sh %}
rails generate scaffold idea name:string description:text picture:string
rake db:migrate
ruby script\rails server
{% endhighlight %}
  </div>
</div>

גלשי לכתובת [http://localhost:3000/ideas](http://localhost:3000/ideas) בדפדפן שלך. לחצי מסביב ובדקי את מה שקיבלת באמצעות הרצת מעט הפקודות האלו.

לחצי `CTRL-C` כדי לכבות את השרת שוב אחרי ששיחקת קצת עם האפליקציה.


## *3.*עיצוב

**מדריך/ה:** דברי על הקשר בין HTML ו-Rails. אלו חלקים מה-views הם HTML ואלו הם Embedded Ruby (ERB)? מה זה MVC ואיך זה מתקשר לעניננו? (Models ו-controllers אחראיים לייצור תצוגות ה-HTML.)

האפליקציה עדיין לא נראית משהו. בואי נעשה עם זה משהו. נוסיף את הפרוייקט Twitter Bootstrap כדי לתת לנו סטייל נחמד יותר בקלות רבה.

פתחי את הקובץ `app/views/layouts/application.html.erb` בערוך הטקסט שלך, ומעל השורה

{% highlight erb %}
<%= stylesheet_link_tag "application", media: "all", "data-turbolinks-track" => true %>
{% endhighlight %}

הוסיפי

{% highlight erb %}
<link rel="stylesheet" href="http://railsgirls.com/assets/bootstrap.css">
{% endhighlight %}

והחליפי את 

{% highlight erb %}
<%= yield %>
{% endhighlight %}

ב-

{% highlight erb %}
<div class="container">
  <%= yield %>
</div>
{% endhighlight %}

בואי נוסיף גם בר ניווט ו-footer ל-layout. באותו הקובץ, תחת `<body>` הוסיפי

{% highlight html %}
<div class="navbar navbar-fixed-top">
  <div class="navbar-inner">
    <div class="container">
      <a class="brand" href="/">The Idea app</a>
      <ul class="nav">
        <li class="active"><a href="/ideas">Ideas</a></li>
      </ul>
    </div>
  </div>
</div>
{% endhighlight %}

ולפני `</body>` הוסיפי

{% highlight html %}
<footer>
  <div class="container">
    Rails Girls 2013
  </div>
</footer>
{% endhighlight %}

כעת בואי גם נשנה את העיצוב של טבלת הרעיונות. פתחי את הקובץ `app/assets/stylesheets/application.css` והוסיפי בתחתית

{% highlight css %}
body { padding-top: 100px; }
footer { margin-top: 100px; }
table, td, th { vertical-align: middle !important; border: none !important; }
th { border-bottom: 1px solid #DDD !important; }
{% endhighlight %}

כעת רפרשי את הדפדפן כדי לראות מה השתנה. את יכולה גם לשנות את ה-HTML וה-CSS עוד.

**מדריך/ה:** דבר/י קצת על CSS ו-layouts.


## שלב 4: הוספת העלאת תמונות

אנחנו נצטרך להתקין חתיכת תוכנה שתאפשר לנו להעלות קבצים ב-Rails.

פתחי את הקובץ `Gemfile` בתיקיית הפרוייקט באמצעות עורך הטקסט ומתחת לשורה

{% highlight ruby %}
gem 'sqlite3'
{% endhighlight %}

הוסיפי

{% highlight ruby %}
gem 'carrierwave'
{% endhighlight %}

**מדריך/ה:** הסבר/הסבירי מהן ספריות וכיצד הן מועילות. תאר/י מהי תוכנת קוד פתוח.

הטרמינל הריצי:

{% highlight sh %}
bundle
{% endhighlight %}

בשלב זה עליך **לאתחל את שרת ה-Rails** בטרמינל. זה נחוץ על מנת שהאפליקציה תטען את הספרייה שהתווספה.

כעת אנחנו יכולים לג'נרט את הקוד שמטפל בהעלאות. בטרמינל הריצי:

{% highlight sh %}
rails generate uploader Picture
{% endhighlight %}

פתחי את הקובץ `app/models/idea.rb` ומתחת לשורה

{% highlight ruby %}
class Idea < ActiveRecord::Base
{% endhighlight %}

הוסיפי 

{% highlight ruby %}
mount_uploader :picture, PictureUploader
{% endhighlight %}

פתחי את הקובץ `app/views/ideas/_form.html.erb` והשני את 

{% highlight erb %}
<%= f.text_field :picture %>
{% endhighlight %}

ל- 

{% highlight erb %}
<%= f.file_field :picture %>
{% endhighlight %}

בדפדפן שלך, הוסיפי רעיון חדש עם תמונה. כשאת מעלה תמונה היא לא נראית כל כך טוב כי היא מציגה רק את הנתיב אל קובץ התמונה, אז בואי נתקן זאת.

פתחי את הקובץ `app/views/ideas/show.html.erb` ושני את 

{% highlight erb %}
<%= @idea.picture %>
{% endhighlight %}

ל- 

{% highlight erb %}
<%= image_tag(@idea.picture_url, :width => 600) if @idea.picture.present? %>
{% endhighlight %}

כעת רפרפשי את הדפדפן שלך כדי לראות מה השתנה.

**מדריך/ה:** דבר/י מעט על HTML.


## שלב 5: שיפורים ו-routes

אם תנסי לגלוש ל-[http://localhost:3000](http://localhost:3000) זה יציג לך את מסך ה-"Welcome aboard". בואי נגרום לו להציג את רשימת הרעיונות.

פתחי את הקובץ `config/routes.rb` ואחרי השורה הראשונה הוסיפי

{% highlight ruby %}
root :to => redirect('/ideas')
{% endhighlight %}

בדקי את השינוי ע"י גלישה לכתובת הראשית בדפדפן שלך.

**מדריך/ה:** דבר/י על routes.


## מה הלאה?

* הוסיפי עיצוב באמצעות HTML ו-CSS
* הוסיפי דירוג
* השתמשי ב-CoffeeScript (או ב-JavaScript) כדי להוסיף אינטראקטיביות
* הוסיפי resizing לתמונה כדי לזרז את טעינת התמונות


## מדריכים נוספים

* מדריך 0: [Handy cheatsheet for Ruby, Rails, console etc.](https://github.com/PragTob/rails-beginner-cheatsheet)
* מדריך 1: [Add commenting by Janika Liiv](/commenting)
* מדריך 2: [Put your app online with Heroku by Terence Lee](/heroku)
* מדריך 3: [Build a map of workshop participants by Rails Girls Berlin](http://railsgirlsberlin.de/apptutorial/)
* מדריך 4: [Create thumbnail images for the uploads by Miha Filej](/thumbnails)
* מדריך 5: [Add design using HTML &amp; CSS by Alex Liao](/design)
* מדריך 6: [Add Authentication (user accounts) with Devise by Piotr Steininger](/devise/)
* מדריך 7: [Go through additional explanations for the App by Lucy Bain](https://github.com/lbain/railsgirls)

